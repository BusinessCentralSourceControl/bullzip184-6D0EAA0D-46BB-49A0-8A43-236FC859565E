Report 6188719 "ForNAV Cust./Item Statistics"
{
    Caption = 'Customer/Item Statistics';
    UsageCategory = ReportsAndAnalysis;
    WordLayout = './Layouts/ForNAV Cust.Item Statistics.docx';
    DefaultLayout = Word;

    dataset
    {
        dataitem(Args;"ForNAV Cust./Item Stat. Args.")
        {
            DataItemTableView = sorting("Print Details");
            UseTemporary = true;

            column(ReportForNavId_1000000000;1000000000)
            {
            } // Autogenerated by ForNav - Do not delete
            column(ReportForNav_Args;ReportForNavWriteDataItem('Args', Args))
            {
            }
            trigger OnPreDataItem();
            begin
                Insert;
                ReportForNav.OnPreDataItem('Args', Args);
            end;
        }
        dataitem(Customer;Customer)
        {
            PrintOnlyIfDetail = true;
            RequestFilterFields = "No.", "Search Name", "Customer Posting Group";

            column(ReportForNavId_6836;6836)
            {
            } // Autogenerated by ForNav - Do not delete
            column(ReportForNav_Customer;ReportForNavWriteDataItem('Customer', Customer))
            {
            }
            dataitem("Value Entry";"Value Entry")
            {
                DataItemLink = "Source No."=FIELD("No."), "Global Dimension 1 Code"=FIELD("Global Dimension 1 Filter"), "Global Dimension 2 Code"=FIELD("Global Dimension 2 Filter");
                DataItemTableView = sorting("Source Type", "Source No.", "Item Ledger Entry Type", "Item No.", "Posting Date")where("Source Type"=const(Customer), "Item Ledger Entry Type"=const(Sale), "Expected Cost"=const(false));
                RequestFilterFields = "Item No.", "Inventory Posting Group", "Posting Date";

                column(ReportForNavId_8894;8894)
                {
                } // Autogenerated by ForNav - Do not delete
                column(ReportForNav_ValueEntry;ReportForNavWriteDataItem('ValueEntry', "Value Entry"))
                {
                }
                trigger OnPreDataItem();
                begin
                    ReportForNav.OnPreDataItem('ValueEntry', "Value Entry");
                end;
            }
            trigger OnPreDataItem();
            begin
                ReportForNav.SetNewPagePerRecord('Customer', Args."New Page Per Customer");
                ReportForNav.OnPreDataItem('Customer', Customer);
            end;
        }
    }
    requestpage
    {
        SaveValues = true;

        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';

                    field(PrintDetails;Args."Print Details")
                    {
                        ApplicationArea = All;
                        Caption = 'Print Details';
                    }
                    field(NewPagePerCustomer;Args."New Page Per Customer")
                    {
                        ApplicationArea = All;
                        Caption = 'New Page per Customer';
                    }
                    field(ForNavOpenDesigner;ReportForNavOpenDesigner)
                    {
                        ApplicationArea = All;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;

                        trigger OnValidate()begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;
                    }
                }
            }
        }
        actions
        {
        }
        trigger OnOpenPage()begin
            ReportForNavOpenDesigner:=false;
        end;
    }
    trigger OnInitReport()begin
        ;
        ReportsForNavInit;
        Codeunit.Run(Codeunit::"ForNAV First Time Setup");
        Commit;
        LoadWatermark;
    end;
    trigger OnPostReport()begin
    end;
    local procedure LoadWatermark()var ForNAVSetup: Record "ForNAV Setup";
    OutStream: OutStream;
    begin
        ForNAVSetup.Get;
        ForNAVSetup.CalcFields(ForNAVSetup."List Report Watermark");
        if not ForNAVSetup."List Report Watermark".Hasvalue then exit;
        ReportForNav.LoadWatermarkImage(ForNAVSetup.GetListReportWatermark);
    end;
    trigger OnPreReport();
    begin
        ;
        ReportsForNavPre;
    end;
    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var ReportForNavInitialized: Boolean;
    ReportForNavShowOutput: Boolean;
    ReportForNavTotalsCausedBy: Boolean;
    ReportForNavOpenDesigner: Boolean;
    [InDataSet]
    ReportForNavAllowDesign: Boolean;
    ReportForNav: Codeunit "ForNAV Report Management";
    local procedure ReportsForNavInit()var id: Integer;
    begin
        Evaluate(id, CopyStr(CurrReport.ObjectId(false), StrPos(CurrReport.ObjectId(false), ' ') + 1));
        ReportForNav.OnInit(id, ReportForNavAllowDesign);
    end;
    local procedure ReportsForNavPre()begin
        if ReportForNav.LaunchDesigner(ReportForNavOpenDesigner)then CurrReport.Quit();
    end;
    local procedure ReportForNavSetTotalsCausedBy(value: Boolean)begin
        ReportForNavTotalsCausedBy:=value;
    end;
    local procedure ReportForNavSetShowOutput(value: Boolean)begin
        ReportForNavShowOutput:=value;
    end;
    local procedure ReportForNavInit(jsonObject: JsonObject)begin
        ReportForNav.Init(jsonObject, CurrReport.ObjectId);
    end;
    local procedure ReportForNavWriteDataItem(dataItemId: Text;
    rec: Variant): Text var values: Text;
    jsonObject: JsonObject;
    currLanguage: Integer;
    begin
        if not ReportForNavInitialized then begin
            jsonObject.Add('Customer$Get$Filters$Text', Customer.GetFilters());
            jsonObject.Add('Customer$Get$Caption$Text', Customer.TableCaption());
            jsonObject.Add('ValueEntry$Get$Filters$Text', "Value Entry".GetFilters());
            jsonObject.Add('ValueEntry$Get$Caption$Text', "Value Entry".TableCaption());
            ReportForNavInit(jsonObject);
            ReportForNavInitialized:=true;
        end;
        case(dataItemId)of 'Customer': begin
            currLanguage:=GlobalLanguage;
            GlobalLanguage:=1033;
            jsonObject.Add('DataItem$Customer$CurrentKey$Text', Customer.CurrentKey);
            GlobalLanguage:=currLanguage;
        end;
        end;
        ReportForNav.AddDataItemValues(jsonObject, dataItemId, rec);
        jsonObject.WriteTo(values);
        exit(values);
    end;
// Reports ForNAV Autogenerated code - do not delete or modify -->
}
