Report 6188741 "ForNAV Item Variants"
{
    Caption = 'Item Variants';
    UsageCategory = ReportsAndAnalysis;
    WordLayout = './Layouts/ForNAV Item Variants.docx';
    DefaultLayout = Word;

    dataset
    {
        dataitem(Item;Item)
        {
            DataItemTableView = sorting("Inventory Posting Group");

            column(ReportForNavId_1000000000;1000000000)
            {
            } // Autogenerated by ForNav - Do not delete
            column(ReportForNav_Item;ReportForNavWriteDataItem('Item', Item))
            {
            }
            column(HTMLTable;HTMLTable)
            {
            IncludeCaption = false;
            }
            column(Color;GetColor)
            {
            IncludeCaption = false;
            }
            trigger OnPreDataItem();
            begin
                ReportForNav.OnPreDataItem('Item', Item);
            end;
        }
    }
    requestpage
    {
        layout
        {
            area(content)
            {
                group(Options)
                {
                    Caption = 'Options';

                    field(ForNavOpenDesigner;ReportForNavOpenDesigner)
                    {
                        ApplicationArea = All;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;

                        trigger OnValidate()begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;
                    }
                }
            }
        }
        actions
        {
        }
        trigger OnOpenPage()begin
            ReportForNavOpenDesigner:=false;
        end;
    }
    trigger OnInitReport()begin
        ;
        ReportsForNavInit;
    end;
    trigger OnPostReport()begin
    end;
    trigger OnPreReport()begin
        ;
        ReportsForNavPre;
    end;
    local procedure HTMLTable(): Text begin
        exit('<!DOCTYPE>' + '<html>' + '<head>' + GetStyle + '</head>' + '<body>' + '<table style="margin-left: 10px">' + '  <tr>' + '	<th>Color</th>' + '	<th>QTY</th>' + '  </tr>' + GetTableRows + '</table>' + '</body>' + '</html>');
    end;
    local procedure GetTableRows(): Text var ItemVariant: Record "Item Variant";
    HTMLTable: Text;
    begin
        ItemVariant.SetRange("Item No.", Item."No.");
        if ItemVariant.FindSet then repeat HTMLTable+='<tr>';
                HTMLTable+='<td>' + ItemVariant.Code + '</td>';
                HTMLTable+='<td>' + Format(ItemVariant.Description) + '</td>';
                HTMLTable+='</tr>';
            until ItemVariant.Next = 0;
        exit(HTMLTable);
    end;
    local procedure GetStyle(): Text begin
        exit('<style>' + 'table, th, td {' + 'border: 1px solid black;' + 'font-family: segoe ui;' + 'font-size: 10px;' + '}' + '</style>');
    end;
    local procedure GetColor(): Text begin
        exit(GetDemoColorFromPostingGroup(Item."Inventory Posting Group"));
    end;
    local procedure GetDemoColorFromPostingGroup(Value: Code[10]): Text var InventoryPostingGroup: Record "Inventory Posting Group";
    i: Integer;
    begin
        if InventoryPostingGroup.FindSet then repeat i+=1;
            until(InventoryPostingGroup.Code = Value) or (InventoryPostingGroup.Next = 0);
        case i of 1: exit('BurlyWood');
        2: exit('DeepSkyBlue');
        3: exit('LightGreen');
        4: exit('LightPink');
        end;
    end;
    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var ReportForNavInitialized: Boolean;
    ReportForNavShowOutput: Boolean;
    ReportForNavTotalsCausedBy: Boolean;
    ReportForNavOpenDesigner: Boolean;
    [InDataSet]
    ReportForNavAllowDesign: Boolean;
    ReportForNav: Codeunit "ForNAV Report Management";
    local procedure ReportsForNavInit()var id: Integer;
    begin
        Evaluate(id, CopyStr(CurrReport.ObjectId(false), StrPos(CurrReport.ObjectId(false), ' ') + 1));
        ReportForNav.OnInit(id, ReportForNavAllowDesign);
    end;
    local procedure ReportsForNavPre()begin
        if ReportForNav.LaunchDesigner(ReportForNavOpenDesigner)then CurrReport.Quit();
    end;
    local procedure ReportForNavSetTotalsCausedBy(value: Boolean)begin
        ReportForNavTotalsCausedBy:=value;
    end;
    local procedure ReportForNavSetShowOutput(value: Boolean)begin
        ReportForNavShowOutput:=value;
    end;
    local procedure ReportForNavInit(jsonObject: JsonObject)begin
        ReportForNav.Init(jsonObject, CurrReport.ObjectId);
    end;
    local procedure ReportForNavWriteDataItem(dataItemId: Text;
    rec: Variant): Text var values: Text;
    jsonObject: JsonObject;
    currLanguage: Integer;
    begin
        if not ReportForNavInitialized then begin
            ReportForNavInit(jsonObject);
            ReportForNavInitialized:=true;
        end;
        case(dataItemId)of end;
        ReportForNav.AddDataItemValues(jsonObject, dataItemId, rec);
        jsonObject.WriteTo(values);
        exit(values);
    end;
// Reports ForNAV Autogenerated code - do not delete or modify -->
}
